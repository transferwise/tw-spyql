apply plugin: 'java-library'
apply plugin: 'groovy'
apply plugin: 'com.github.spotbugs'
apply plugin: 'checkstyle'

group = 'com.transferwise.common'

ext.projectName = 'Transferwise Database Connection Spy'

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    withSourcesJar()
    withJavadocJar()
}


jar {
    manifest {
        attributes(
                "Implementation-Title": "$projectName",
                "Implementation-Version": version
        )
    }
}

compileJava {
    options.encoding = 'utf-8'
    options.compilerArgs << '-parameters'
}

repositories {
    maven {
        setUrl("https://arti.tw.ee/artifactory/libs-release")
    }
    mavenLocal()
}

ext.springBootVersion = "2.3.3.RELEASE"

dependencies {
    annotationProcessor platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
    testAnnotationProcessor platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
    compileOnly platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
    implementation platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
    testImplementation platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    compileOnly 'org.projectlombok:lombok'
    compileOnly 'com.github.spotbugs:spotbugs-annotations:3.1.12'

    testAnnotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.projectlombok:lombok'
    testImplementation 'junit:junit:4.12'
    testImplementation 'com.h2database:h2'
    testImplementation "org.springframework:spring-context"
    testImplementation "org.springframework:spring-test"
    testImplementation "org.spockframework:spock-core:1.3-groovy-2.5"
    testImplementation 'org.slf4j:slf4j-simple'
}

test {
    testLogging {
        events "passed", "skipped", "failed", "standardError"
        showStackTraces = true
        exceptionFormat = 'full'
    }
}

spotbugsMain {
    reports {
        html {
            enabled = true
        }
        xml {
            enabled = false
        }
    }
}

spotbugs{
    effort = "max"
    spotbugsTest.enabled = false
}

tasks.withType(Checkstyle) {
    config = resources.text.fromFile(file('../google_checks.xml'))

    maxWarnings = 0

    reports {
        xml.enabled false
        html.enabled true
    }
}

checkstyle {
    checkstyleTest.enabled = false
}

idea {
    module {
        excludeDirs += file('logs')
        excludeDirs += file('gradle')
        excludeDirs += file('build')
        excludeDirs += file('target')
        excludeDirs += file('.idea')
        excludeDirs += file('.gradle')
    }
}
