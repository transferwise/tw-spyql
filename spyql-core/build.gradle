plugins {
	id 'java'
	id 'groovy'
	id 'idea'
	id 'maven-publish'
}

group 'com.transferwise'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

ext {
	springVersion = "4.3.14.RELEASE"
}

dependencies {
	compile "org.springframework:spring-jdbc:$springVersion"
	compile "org.springframework:spring-tx:$springVersion"

	testCompile 'junit:junit:4.12'
	testCompile 'com.h2database:h2:1.4.196'
	testCompile "org.springframework:spring-context:$springVersion"
	testCompile "org.springframework:spring-test:$springVersion"
	testCompile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
	testCompile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
	testCompile group: 'org.spockframework', name: 'spock-core', version: '1.1-groovy-2.4'
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

artifacts {
	archives sourcesJar
	archives javadocJar
}

publish.dependsOn assemble
publishToMavenLocal.dependsOn assemble

jar {
	manifest {
		attributes('Implementation-Version': project.version)
	}
//	from {
//		configurations.includeInJar.collect { it.isDirectory() ? it : zipTree(it) }
//	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
	repositories {
		maven {
			url artifactoryUrl(project, 'libs')
			credentials {
				username = project.hasProperty('artifactoryUser') ? artifactoryUser : System.getenv('ARTIFACTORY_USER')
				password = project.hasProperty('artifactoryPassword') ? artifactoryPassword : System.getenv('ARTIFACTORY_PASSWORD')
			}
		}
	}
}

static artifactoryUrl(prj, libraryType) {
	def releaseType = prj.property('version').contains('SNAPSHOT') ? 'snapshot' : 'release'
	"http://artifacts.transferwise.com/artifactory/${libraryType}-${releaseType}-local"
}
